#!/bin/bash -l

path_in="${1}"
path_out=${2}
path_log=${3}
region=${4}
suffix=${5}
snr_cut=${6}
lines=${7}
lines_name=${8}
cat=${9}
catalog_name=${10}
noise_estimate=${11}
mode=${12}
use_constant_weight=${13}
dla=${14}
dla_name=${15}
bal=${16}
nb_proc=${17}


echo "input path for computation:"
echo $path_in
echo "output path for computation:"
echo $path_out
echo "log path for computation:"
echo $path_log
echo "p1d region name:"
echo $region
echo "specific suffix:"
echo $suffix
echo "SNR cut:"
echo $snr_cut
echo "sky line file:"
echo $lines
echo "sky line name:"
echo $lines_name
echo "QSO catalog file:"
echo $cat
echo "QSO catalog name:"
echo $catalog_name
echo "noise estimate for p1d:"
echo $noise_estimate
echo "mode:"
echo $mode
echo "constant weight option:"
echo $use_constant_weight
echo "dla catalog:"
echo $dla
echo "dla catalog name:"
echo $dla_name
echo "bal parameter cut:"
echo $bal
echo "number of processors:"
echo $nb_proc

if [[ ${region} == "lya" ]]
then
lrestmin=1040.0
lrestmax=1200.0
elif [[ ${region} == "SB1" ]]
then
lrestmin=1270.0
lrestmax=1380.0
elif [[ ${region} == "SB2" ]]
then
lrestmin=1410.0
lrestmax=1520.0
fi

if [[ ${use_constant_weight} == "True" ]]
then
use_constant_weight_flag="--use-constant-weight"
else
use_constant_weight_flag=""
fi

if [[ ${noise_estimate} == "diff" ]]
then
coadd_picca_flag="--coadd-by-picca"
compute_diff_flux_flag="--compute-diff-flux"
else
coadd_picca_flag=""
compute_diff_flux_flag=""
fi

if [[ ${dla_name} == "None" ]]
then
dla_flag=""
else
dla_flag="--dla-vac "${dla}
fi

if [[ ${bal} == "None" ]]
then
bal_flag=""
else
bal_flag="--bi-max "${bal}
fi

folder_name=$(p1desi_bookkeeping.py --region ${region} \
                                    --lines-name ${lines_name} \
                                    --catalog-name ${catalog_name} \
                                    --dla-name ${dla_name} \
                                    --bal ${bal} \
                                    --suffix ${suffix} \
                                    --noise-estimate ${noise_estimate} 2>&1 > /dev/null)

path_out=${path_out}/p1d_${folder_name}

mkdir -p ${path_out}/deltas
mkdir -p ${path_log}

picca_deltas.py \
--in-dir "$path_in" \
--drq ${cat} \
--out-dir ${path_out}/deltas \
--mode ${mode} \
--delta-format Pk1D \
--rebin 1 \
--lambda-min 3500. \
--lambda-max 7200.0 \
--lambda-rest-min ${lrestmin} \
--lambda-rest-max ${lrestmax} \
--nproc ${nb_proc} \
--order 0 \
${use_constant_weight_flag} \
${coadd_picca_flag} \
${compute_diff_flux_flag} \
${dla_flag} \
${bal_flag} \
--use-desi-P1d-changes \
--mc-rebin-fac 4 \
--min-SNR 1 \
--mask-file ${lines} \
--log ${path_log}/delta_log_${folder_name} \
--iter ${path_log}/delta_iter_${folder_name} > ${path_log}/delta_output_${folder_name} 2> ${path_log}/delta_error_${folder_name}

for i in "${!snr_cut[@]}"; do

  snr=${snr_cut[i]}
  mkdir -p ${path_out}/pk1d_SNRcut${snr}

  picca_Pk1D.py \
  --in-dir ${path_out}/deltas \
  --in-format fits \
  --out-dir ${path_out}/pk1d_SNRcut${snr} \
  --lambda-obs-min 3750. \
  --noise-estimate ${noise_estimate} \
  --pixel-correction inverse \
  --nproc ${nb_proc} \
  --use-desi-new-defaults \
  --nb-pixel-masked-max 120 \
  --nb-part 3 \
  --SNR-min ${snr} \
  --nb-noise-exp 2500 > ${path_log}/p1d_output_${folder_name}_SNRcut${snr} 2> ${path_log}/p1d_error_${folder_name}_SNRcut${snr}
done
